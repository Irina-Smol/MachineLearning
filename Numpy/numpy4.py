import numpy as np

#  поменять тип данных
a = np.array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])
print(a.dtype)
print(a.size)

a.dtype = np.int8()
print(a.dtype)
print(a.size)

# сколько байт занимает один элемент
print(a.itemsize) # вернет 4 (байта)
print(a.size*a.itemsize) # размер памяти для всего массива, вернет 72 (байта)


b = np.ones( (3, 4, 5) )
# Узнать количество его осей
print(b.ndim) # вернет значение 3

# определить размеры каждой из осей
b.shape # вернет кортеж (3, 4, 5)

# менять размерность массива, главное, чтобы общее число элементов оставалось прежним
b.shape = 60 # все 60 элементов вытянутся в строку
b.shape = (12, 5) # массив размерностью 12x5

"""
в пакете NumPy разделяются понятия данные и представление этих данных
"""

# Метод view() для создания представления
a = np.array([1,2,3,4,5,6,7,8,9])
b = a
a.shape = 3,3  # вторая ссылка b также будет ссылаться на это измененное представление

a = np.array([1,2,3,4,5,6,7,8,9])
b = a.view()  # создание нового представления
a.shape = 3,3 # это уже никак не скажется на форме того же самого массива, доступного через ссылку b

# Создание копий массивов
a = np.array([1,2,3,4,5,6,7,8,9])
b = np.array( a )  # создается копия массива
c = a.copy()  # создание копии массива
# При этом происходит копирование всех свойств объекта array
