# Создать вектор (одномерный массив) размера 10, заполненный нулями
Z = np.zeros(10)
print(Z)

#Создать вектор размера 10, заполненный единицами
Z = np.ones(10)
print(Z)

#Создать вектор размера 10, заполненный числом 2.5
Z = np.full(10, 2.5)
print(Z)

#Как получить документацию о функции numpy.add из командной строки?
python3 -c "import numpy; numpy.info(numpy.add)"

#Создать вектор размера 10, заполненный нулями, но пятый элемент равен 1
Z = np.zeros(10)
Z[4] = 1
print(Z)

#Создать вектор со значениями от 10 до 49
Z = np.arange(10,50)
print(Z)

#Развернуть вектор (первый становится последним)
Z = np.arange(50)
Z = Z[::-1]

#Создать матрицу (двумерный массив) 3x3 со значениями от 0 до 8
Z = np.arange(9).reshape(3,3)
print(Z)

#Найти индексы ненулевых элементов в [1,2,0,0,4,0]
nz = np.nonzero([1,2,0,0,4,0])
print(nz)

#Создать 3x3 единичную матрицу
Z = np.eye(3)
print(Z)

#Создать массив 3x3x3 со случайными значениями
Z = np.random.random((3,3,3))
print(Z)

#Создать массив 10x10 со случайными значениями, найти минимум и максимум
Z = np.random.random((10,10))
Zmin, Zmax = Z.min(), Z.max()
print(Zmin, Zmax)

#Создать случайный вектор размера 30 и найти среднее значение всех элементов
Z = np.random.random(30)
m = Z.mean()
print(m)

#Создать матрицу с 0 внутри, и 1 на границах
Z = np.ones((10,10))
Z[1:-1,1:-1] = 0

#Выяснить результат следующих выражений
0 * np.nan
np.nan == np.nan
np.inf > np.nan
np.nan - np.nan
0.3 == 3 * 0.1

#Создать 5x5 матрицу с 1,2,3,4 под диагональю
Z = np.diag(np.arange(1, 5), k=-1)
print(Z)

#Создать 8x8 матрицу и заполнить её в шахматном порядке
Z = np.zeros((8,8), dtype=int)
Z[1::2,::2] = 1
Z[::2,1::2] = 1
print(Z)

#Дан массив размерности (6,7,8). Каков индекс (x,y,z) сотого элемента?
print(np.unravel_index(100, (6,7,8)))

#Создать 8x8 матрицу и заполнить её в шахматном порядке, используя функцию tile
Z = np.tile(np.array([[0,1],[1,0]]), (4,4))
print(Z)

#Перемножить матрицы 5x3 и 3x2
Z = np.dot(np.ones((5,3)), np.ones((3,2)))
print(Z)

#Дан массив, поменять знак у элементов, значения которых между 3 и 8
Z = np.arange(11)
Z[(3 < Z) & (Z <= 8)] *= -1

#Создать 5x5 матрицу со значениями в строках от 0 до 4
Z = np.zeros((5,5))
Z += np.arange(5)
print(Z)

#Есть генератор, сделать с его помощью массив
def generate():
    for x in xrange(10):
        yield x
Z = np.fromiter(generate(),dtype=float,count=-1)
print(Z)

#Создать вектор размера 10 со значениями от 0 до 1, не включая ни то, ни другое
Z = np.linspace(0,1,12)[1:-1]
print(Z)

#Отсортировать вектор
Z = np.random.random(10)
Z.sort()
print(Z)

#Проверить, одинаковы ли 2 numpy массива
A = np.random.randint(0,2,5)
B = np.random.randint(0,2,5)
equal = np.allclose(A,B)
print(equal)

#Сделать массив неизменяемым
Z = np.zeros(10)
Z.flags.writeable = False
Z[0] = 1

#Дан массив 10x2 (точки в декартовой системе координат), преобразовать в полярную
Z = np.random.random((10,2))
X,Y = Z[:,0], Z[:,1]
R = np.hypot(X, Y)
T = np.arctan2(Y,X)
print(R)
print(T)
